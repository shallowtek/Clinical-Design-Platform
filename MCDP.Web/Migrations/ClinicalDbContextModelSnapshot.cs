// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCDP.Web.Migrations
{
    [DbContext(typeof(ClinicalDbContext))]
    partial class ClinicalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MCDP.Web.Models.M11.ProtocolSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ObjectivesAndEstimands")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverallDesign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitlePageId")
                        .HasColumnType("int");

                    b.Property<string>("TrialSchema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProtocolSummaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ObjectivesAndEstimands = "Primary: assess safety and tolerability; Secondary: characterize pharmacokinetics.",
                            OverallDesign = "Open-label, single ascending dose.",
                            ScheduleJson = "[\r\n                {\"VisitName\":\"Screening\",\"Day\":-14,\"Activity\":\"Consent, eligibility\"},\r\n                {\"VisitName\":\"Day 1\",\"Day\":1,\"Activity\":\"Dosing, PK sampling\"},\r\n                {\"VisitName\":\"Follow-up\",\"Day\":28,\"Activity\":\"Safety assessments\"}\r\n            ]",
                            Synopsis = "A Phase I, open-label study to evaluate safety and tolerability of Compound X in healthy volunteers.",
                            TitlePageId = 0,
                            TrialSchema = "Single arm, dose escalation."
                        },
                        new
                        {
                            Id = 2,
                            ObjectivesAndEstimands = "Primary: change in glomerular filtration rate (GFR); Secondary: safety and tolerability.",
                            OverallDesign = "Randomized, double-blind, placebo-controlled, parallel-group.",
                            ScheduleJson = "[\r\n                {\"VisitName\":\"Screening\",\"Day\":-28,\"Activity\":\"Consent, lab tests\"},\r\n                {\"VisitName\":\"Baseline\",\"Day\":0,\"Activity\":\"Randomization, first dose\"},\r\n                {\"VisitName\":\"Week 12\",\"Day\":84,\"Activity\":\"Efficacy assessment\"},\r\n                {\"VisitName\":\"Follow-up\",\"Day\":90,\"Activity\":\"Safety follow-up\"}\r\n            ]",
                            Synopsis = "A Phase II, randomized, double-blind, placebo-controlled study to evaluate efficacy of Drug A in patients with chronic kidney disease.",
                            TitlePageId = 0,
                            TrialSchema = "Two-arm parallel, randomization 2:1 (Drug A : Placebo)."
                        },
                        new
                        {
                            Id = 3,
                            ObjectivesAndEstimands = "Primary: treatment patterns and long-term safety; Secondary: patient-reported outcomes.",
                            OverallDesign = "Multicenter, prospective observational registry.",
                            ScheduleJson = "[\r\n                {\"VisitName\":\"Enrollment\",\"Day\":0,\"Activity\":\"Consent, baseline assessments\"},\r\n                {\"VisitName\":\"Year 1\",\"Day\":365,\"Activity\":\"Clinical evaluation\"},\r\n                {\"VisitName\":\"Year 2\",\"Day\":730,\"Activity\":\"Clinical evaluation\"}\r\n            ]",
                            Synopsis = "An observational registry to assess long-term outcomes of biologic therapy in rheumatoid arthritis patients.",
                            TitlePageId = 0,
                            TrialSchema = "Annual visits over 5 years."
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.M11.TitlePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOriginalProtocol")
                        .HasColumnType("bit");

                    b.Property<string>("ProtocolIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SponsorAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SponsorConfidentiality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SponsorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrialAcronym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VersionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TitlePages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullTitle = "A Randomized, Double-Blind, Placebo-Controlled Study of Compound X in Subjects with Condition Y",
                            IsOriginalProtocol = true,
                            ProtocolIdentifier = "PC-2025-001",
                            SponsorAddress = "123 Clinical Road, Research City, Country",
                            SponsorConfidentiality = "Sponsor confidential — do not distribute",
                            SponsorName = "PharmaCo Inc.",
                            TrialAcronym = "RX-YZ",
                            VersionDate = new DateTime(2025, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VersionNumber = "1.0"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullTitle = "A Phase II, Multicenter, Open-Label Study of Drug A in Patients with Chronic Kidney Disease",
                            IsOriginalProtocol = false,
                            ProtocolIdentifier = "RH-CKD-2025-002",
                            SponsorAddress = "45 Nephron Ave, MedCity, Country",
                            SponsorConfidentiality = "Internal use only — confidentiality applies",
                            SponsorName = "RenalHealth Ltd.",
                            TrialAcronym = "CKD-A2",
                            VersionDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VersionNumber = "2.1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullTitle = "An Observational Registry to Evaluate Long-Term Outcomes of Biologic Therapy in Rheumatoid Arthritis",
                            IsOriginalProtocol = true,
                            ProtocolIdentifier = "IT-RA-2025-003",
                            SponsorAddress = "789 Pharma Park, BioTown, Country",
                            SponsorConfidentiality = "Confidential — do not circulate externally",
                            SponsorName = "ImmuneTech Corp.",
                            TrialAcronym = "BioRA",
                            VersionDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VersionNumber = "1.0"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullTitle = "A Phase III, Double-Blind, Placebo-Controlled Trial of Vaccine V Against Virus Z in Healthy Adults",
                            IsOriginalProtocol = true,
                            ProtocolIdentifier = "GV-2025-004",
                            SponsorAddress = "101 Vaccine Blvd, ImmunoCity, Country",
                            SponsorConfidentiality = "Company confidential — internal distribution only",
                            SponsorName = "GlobalVax Biotech",
                            TrialAcronym = "VAC-Z",
                            VersionDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VersionNumber = "3.0"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4444444-0000-0000-0000-000000000001"),
                            Category = "Procedure",
                            Description = "Routine lab draw",
                            Name = "Blood Draw",
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("d4444444-0000-0000-0000-000000000002"),
                            Category = "Assessment",
                            Description = "Electrocardiogram",
                            Name = "ECG",
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Arm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Arms");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.ArmEpoch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpochName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("ArmEpochs");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Criterion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInclusion")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Criteria");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3333333-0000-0000-0000-000000000001"),
                            IsInclusion = true,
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Text = "Age 18-65"
                        },
                        new
                        {
                            Id = new Guid("c3333333-0000-0000-0000-000000000002"),
                            IsInclusion = false,
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Text = "Renal failure"
                        },
                        new
                        {
                            Id = new Guid("c3333333-0000-0000-0000-000000000003"),
                            IsInclusion = true,
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Text = "Age 30-75"
                        },
                        new
                        {
                            Id = new Guid("c3333333-0000-0000-0000-000000000004"),
                            IsInclusion = false,
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Text = "Severe liver disease"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Endpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Endpoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5555555-0000-0000-0000-000000000001"),
                            Description = "Measured at week 12",
                            Name = "HbA1c Reduction",
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Type = "Primary"
                        },
                        new
                        {
                            Id = new Guid("e5555555-0000-0000-0000-000000000002"),
                            Description = "Measured at week 8",
                            Name = "BP Reduction",
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Type = "Primary"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Epoch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Epochs");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Identifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Identifiers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1111111-0000-0000-0000-000000000001"),
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Type = "Sponsor ID",
                            Value = "XYZ-101"
                        },
                        new
                        {
                            Id = new Guid("a1111111-0000-0000-0000-000000000002"),
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Type = "Sponsor ID",
                            Value = "ABC-202"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Intervention", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Objective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Objectives");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2222222-0000-0000-0000-000000000001"),
                            Description = "Reduce HbA1c",
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Type = "Primary"
                        },
                        new
                        {
                            Id = new Guid("b2222222-0000-0000-0000-000000000002"),
                            Description = "Lower Systolic BP",
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Type = "Primary"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Revision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("RevisionHistory");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProtocolIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedOn = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProtocolIdentifier = "XYZ-101-T2D-2025",
                            Title = "XYZ-101 in Type 2 Diabetes"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedOn = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProtocolIdentifier = "ABC-202-HTN-2025",
                            Title = "ABC-202 for Hypertension"
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6666666-0000-0000-0000-000000000001"),
                            Day = -14,
                            Name = "Screening",
                            StudyId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("f6666666-0000-0000-0000-000000000002"),
                            Day = 0,
                            Name = "Baseline",
                            StudyId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Activity", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Activities")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Arm", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Arms")
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.ArmEpoch", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("ArmEpochs")
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Criterion", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Criteria")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Endpoint", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Endpoints")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Epoch", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Epochs")
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Identifier", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Identifiers")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Intervention", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Interventions")
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Objective", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Objectives")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Revision", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("RevisionHistory")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Visit", b =>
                {
                    b.HasOne("MCDP.Web.Models.USDM.Study", null)
                        .WithMany("Visits")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCDP.Web.Models.USDM.Study", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("ArmEpochs");

                    b.Navigation("Arms");

                    b.Navigation("Criteria");

                    b.Navigation("Endpoints");

                    b.Navigation("Epochs");

                    b.Navigation("Identifiers");

                    b.Navigation("Interventions");

                    b.Navigation("Objectives");

                    b.Navigation("RevisionHistory");

                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
