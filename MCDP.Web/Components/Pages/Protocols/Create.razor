@page "/protocols/create"
@using MCDP.Web.Models.USDM
@using Microsoft.AspNetCore.Components.Forms
@inject ClinicalDbContext Db
@inject NavigationManager Nav
@rendermode InteractiveServer

<h3>M11 – Protocol: Study Identification & Overview</h3>

<EditForm formname="CreateForm" Model="@study" OnValidSubmit="SaveStudy">
    <DataAnnotationsValidator />

    <h4>1. Study Identification</h4>
    <InputText @bind-Value="study.ProtocolIdentifier" class="form-control" placeholder="Sponsor Protocol I" />
    <InputText @bind-Value="study.Title" class="form-control mt-2" placeholder="Study Title" />

    <h4>2. Identifiers</h4>
    @foreach (var id in study.Identifiers)
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="id.Type" class="form-control" placeholder="Type (e.g. Sponsor, EudraCT)" />
                <InputText @bind-Value="id.Value" class="form-control" placeholder="Value" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveIdentifier(id)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="AddIdentifier">Add Identifier</button>

    <h4>3. Objectives</h4>
    @foreach (var obj in study.Objectives)
    {
        <div class="mb-2">
            <div class="input-group">
                <select @bind="obj.Type" class="form-select">
                    <option value="Primary">Primary</option>
                    <option value="Secondary">Secondary</option>
                </select>
                <InputText @bind-Value="obj.Description" class="form-control" placeholder="Objective description" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveObjective(obj)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="AddObjective">Add Objective</button>

    <h4>4. Criteria</h4>
    <h5>Inclusion Criteria</h5>
    @foreach (var c in study.Criteria.Where(c => c.IsInclusion).ToList())
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="c.Text" class="form-control" placeholder="Inclusion criterion" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveCriterion(c)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="() => AddCriterion(true)">Add Inclusion Criterion</button>

    <h5>Exclusion Criteria</h5>
    @foreach (var c in study.Criteria.Where(c => !c.IsInclusion).ToList())
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="c.Text" class="form-control" placeholder="Exclusion criterion" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveCriterion(c)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="() => AddCriterion(false)">Add Exclusion Criterion</button>

    <h4>5. Interventions</h4>
    @foreach (var i in study.Interventions)
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="i.Name" class="form-control" placeholder="Name" />
                <InputText @bind-Value="i.Description" class="form-control" placeholder="Description" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveIntervention(i)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="AddIntervention">Add Intervention</button>

    <h4>6. Activities</h4>
    @foreach (var a in study.Activities)
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="a.Name" class="form-control" placeholder="Activity Name" />
                <InputText @bind-Value="a.Description" class="form-control" placeholder="Description" />
                <InputText @bind-Value="a.Category" class="form-control" placeholder="Category" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveActivity(a)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="AddActivity">Add Activity</button>

    <h4>7. Endpoints</h4>
    @foreach (var e in study.Endpoints)
    {
        <div class="mb-2">
            <div class="input-group">
                <InputText @bind-Value="e.Name" class="form-control" placeholder="Name" />
                <select @bind="e.Type" class="form-select">
                    <option value="Primary">Primary</option>
                    <option value="Secondary">Secondary</option>
                </select>
                <InputText @bind-Value="e.Description" class="form-control" placeholder="Description" />
                <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveEndpoint(e)">–</button>
            </div>
        </div>
    }
    <button type="button" class="btn btn-secondary mt-2" @onclick="AddEndpoint">Add Endpoint</button>

    <div>
        <button type="submit" class="btn btn-primary mt-4">Save Protocol</button>
    </div>
    
</EditForm>

@code {
    private Study study = new()
        {
            Criteria = new(),
            Objectives = new(),
            Identifiers = new(),
            Interventions = new(),
            Activities = new(),
            Endpoints = new(),
            Visits = new()
        };

    private void AddIdentifier() => study.Identifiers.Add(new Identifier());
    private void RemoveIdentifier(Identifier id) => study.Identifiers.Remove(id);

    private void AddObjective() => study.Objectives.Add(new Objective { Type = "Primary" });
    private void RemoveObjective(Objective o) => study.Objectives.Remove(o);

    private void AddIntervention() => study.Interventions.Add(new Intervention());
    private void RemoveIntervention(Intervention i) => study.Interventions.Remove(i);

    private void AddActivity() => study.Activities.Add(new Activity());
    private void RemoveActivity(Activity a) => study.Activities.Remove(a);

    private void AddEndpoint() => study.Endpoints.Add(new Endpoint {Type = "Primary"});
    private void RemoveEndpoint(Endpoint e) => study.Endpoints.Remove(e);

    private void AddCriterion(bool isInclusion) => study.Criteria.Add(new Criterion { IsInclusion = isInclusion });
    private void RemoveCriterion(Criterion c) => study.Criteria.Remove(c);

    private async Task SaveStudy()
    {
        Db.Studies.Add(study);
        await Db.SaveChangesAsync();
        Nav.NavigateTo("/protocols");
    }
}
